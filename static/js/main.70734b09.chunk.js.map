{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","useState","setRobots","searchfield","setSearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAYeA,EAVF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BAAKF,IACL,4BAAIC,QCWDK,EAfE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BACKA,EAAOC,KAAI,SAACC,EAAMC,GAAQ,OACvB,cAAC,EAAD,CACIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHVM,EAAOG,GAAGR,UCOtBS,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACbU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,mBAAoBC,OAAO,SAAlE,SACKJ,EAAMK,Y,4BCHEC,E,kDACjB,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAG1B,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAfgBQ,a,MCwC3BC,MAjCf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACJzB,EADI,KACI0B,EADJ,OAE2BD,mBAAS,IAFpC,mBAEJE,EAFI,KAESC,EAFT,KAMXC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACFR,EAAUQ,QAEnB,IAEH,IAAMC,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAStC,EAAOwC,OACR,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAnBN,SAACoC,GACdb,EAAea,EAAMC,OAAOC,UAmBpB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3C,OAAQmC,WANZ,oBAAIvC,UAAU,KAAd,yBChBfgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.70734b09.chunk.js","sourcesContent":["import React from 'react'; \n\nconst Card = ({ name, email, id }) => { \n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma3 grow shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n    )\n}\n\nexport default Card; ","import React from 'react'; \nimport Card from './Card'; \n\nconst CardList = ({ robots }) => { \n    return ( \n        <div>\n            {robots.map((user, i) => { return (\n                <Card key={robots[i].id}\n                    id={robots[i].id}\n                    name={robots[i].name}\n                    email={robots[i].email} \n                    \n                />);\n            })}\n        </div>\n    )\n}\n\nexport default CardList; ","import React from 'react'; \n\nconst SearchBox = ({searchChange}) => { \n    return (\n        <div className='pa2'>\n            <input className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='search robots' \n                onChange={searchChange}\n                />\n        </div>\n    )\n}\n\nexport default SearchBox; ","import React from 'react'; \n\nconst Scroll = (props) => { \n    return (\n        <div style={{overflow:'scroll', border:'0.2px solid gray', height:'800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll; ","import React, { Component } from 'react'; \n\nexport default class ErrorBoundry extends Component{ \n    constructor(props) { \n        super(props); \n        this.state = { \n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) { \n        this.setState({ hasError: true }); \n    }\n    render() { \n        if (this.state.hasError) { \n            return <h1>Oooops. This is not good.</h1>; \n        } \n        return this.props.children; \n    }\n}","import React, { useState, useEffect} from 'react'; \nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox'; \nimport Scroll from '../components/Scroll'; \nimport ErrorBoundry from '../components/ErrorBoundry'; \nimport './App.css'; \n\n \n\nfunction App (){\n    const [robots, setRobots] = useState([]); \n    const [searchfield, setSearchfield] = useState(''); \n    const onSearch = (event) => {\n        setSearchfield(event.target.value);\n    }\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                return response.json();\n            })\n            .then(users => {\n                setRobots(users);\n            });\n    }, []); \n   \n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase()); \n    })\n    return (!robots.length) ? <h1 className='tc'>Loading...</h1> : (\n            <div className='tc'>\n                <h1 className='f1'> RoboFriends</h1>\n                <SearchBox searchChange={onSearch} />\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        ); \n\n}\n\nexport default App; \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'; \nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}